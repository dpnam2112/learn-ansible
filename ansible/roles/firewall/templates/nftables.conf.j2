#!/usr/sbin/nft -f
# Autogenerated by Ansible (role: firewall)

{# Build a single action token. If reject, include the reason. #}
{% macro action_token(a) -%}
{%- set aa = (a|default('accept'))|lower -%}
{%- if aa == 'reject' -%}
reject
{%- else -%}
{{ aa }}
{%- endif -%}
{%- endmacro %}

flush ruleset

table inet filter {
  chain input {
    type filter hook input priority 0; policy {{ fw_default_input_policy | lower }};

    # loopback
    iif lo accept

    # established/related
    ct state established,related accept

    # ICMP/ICMPv6 (good for PMTU, diagnostics)
    {% if fw_allow_icmp %}
    ip protocol icmp accept
    ip6 nexthdr icmpv6 accept
    {% endif %}

    # ---- Dynamic inbound rules ----
    {% set _in_rules = (fw_inbound_rules | default([])) %}
    {% for r in _in_rules %}
      {% set act = action_token(r.action) %}
      {% set cmt = (r.comment | default('inbound rule')) | replace('"','\"') %}
      {% if r.proto in ['tcp','udp'] and r.port is defined %}
        {%- if r.src is defined -%}ip saddr {{ r.src }} {% endif -%}{{ r.proto }} dport {{ r.port }} {{ act }} comment "{{ cmt }}"
      {% elif r.proto == 'icmp' %}
        ip protocol icmp {{ act }} comment "{{ cmt }}"
      {% elif r.proto == 'icmpv6' %}
        ip6 nexthdr icmpv6 {{ act }} comment "{{ cmt }}"
      {% endif %}
    {% endfor %}
  }

  chain output {
    type filter hook output priority 0; policy {{ fw_default_output_policy | lower }};

    # established/related
    ct state established,related accept

    # ---- Dynamic outbound rules ----
    {% for r in fw_outbound_rules | default([]) %}
      {% set act = action_token(r.action) %}
      {% set cmt = (r.comment | default('outbound rule')) | replace('"','\"') %}
      {% if r.proto in ['tcp','udp'] and r.port is defined %}
        {%- if r.dest is defined -%}ip daddr {{ r.dest }} {% endif -%}{{ r.proto }} dport {{ r.port }} {{ act }} comment "{{ cmt }}"
      {% endif %}
    {% endfor %}
  }

  chain forward {
    type filter hook forward priority 0; policy drop;
  }
}

